0
00:00:02,280 --> 00:00:09,680
嗯 老师你好 你看 现在看一下我们组这个ROS 嗯 先看看 这是就是代码

1
00:00:10,550 --> 00:00:14,150
然后是css和这个js文件

2
00:00:16,600 --> 00:00:21,360
看看效果 现在就是网页

3
00:00:22,630 --> 00:00:25,750
我们就是我们写的网页 现在是

4
00:00:27,140 --> 00:00:32,220
我们是通过这个已经跑起来了 在这里先把它取消下也行

5
00:00:33,930 --> 00:00:34,650
重新跑一下吧

6
00:00:39,950 --> 00:00:43,870
你看 就是树莓派上 就是他成功跑起来了 这个ros的服务器

7
00:00:45,160 --> 00:00:52,280
然后在我们在刷新以下这里面 看他这里是已经连上了

8
00:00:53,160 --> 00:00:57,120
然后我们再调出一下小海龟从VNC这里

9
00:01:06,960 --> 00:01:13,600
看一下啊 就是通过这个页面 我们可以通过利用我们这个虚拟遥感 我们可以控制这个海龟

10
00:01:14,690 --> 00:01:21,730
前 后 前 后 然后 左前转圈 右前转圈

11
00:01:23,970 --> 00:01:24,690
后退转圈

12
00:01:29,540 --> 00:01:30,740
然后动下

13
00:01:34,290 --> 00:01:40,010
你看确实在跑 我们可以稍微看一下他 这里他是连接的状态 就是

14
00:01:48,160 --> 00:01:50,480
因为js里面我连接的是这一个

15
00:01:51,500 --> 00:01:54,620
那个树莓派的地址是把它连上去

16
00:01:56,050 --> 00:02:03,650
然后我现在来可以看一看这个树莓派的具体的ros的安装效果 这里还确实是已经跑起来了

17
00:02:04,740 --> 00:02:08,660
然后你看 这是他这个ros的文件组织体系

18
00:02:09,460 --> 00:02:18,580
这opt/ros里面的melody是个版本号 然后包括具体的工作间里面的src文件夹里面 我所用到了三个包

19
00:02:19,790 --> 00:02:25,790
嗯 这个小乌乌龟然后这个rosbridge认识 然后这个是一个认证 我也不知道是啥 但是它确实需要用的

20
00:02:28,280 --> 00:02:35,520
嗯 确实是已经装起来的话 然后 其实我最开始测试 我是在这虚拟机上测试的

21
00:02:36,510 --> 00:02:41,870
你看 我说我是虚拟机 windows子系统 我也可以在上面跑ros

22
00:02:44,860 --> 00:02:48,020
这上面还可以搞个小海龟

23
00:02:49,090 --> 00:02:54,770
现在就是一样的小海龟 其实我这个代码还放在我的主页上

24
00:02:55,660 --> 00:02:59,620
这个网址

25
00:03:01,190 --> 00:03:06,710
还行 连上了 已经连上了 我也可以在这上面上来控制

26
00:03:07,330 --> 00:03:15,530
这个显然是没有延迟的 因为他这一刻是只在我 相当于用脚本在本地运行 就并没有跟服务器间有过多的通讯

27
00:03:16,590 --> 00:03:23,990
就是我本来是打算把它放在网上嘛 他后面因为我这服务器又整了一个 https自动转发

28
00:03:24,900 --> 00:03:31,700
他这个东西搞的那个认证挺麻烦的 我就没有做 然后就是这样

29
00:03:33,280 --> 00:03:35,320
如果跑在本地也行 跑这个乌龟

30
00:03:37,240 --> 00:03:43,600
啊然后这大概就是我们这个组合们组的这个效果 看看还有什么 哦 讲一下这个代码吧

31
00:03:45,450 --> 00:03:46,210
那首先就是

32
00:03:46,670 --> 00:03:47,430
基本的界面

33
00:03:47,830 --> 00:03:56,350
这个界面 然后主要就是两个 一个是这个虚拟摇杆 负责控制 还有个这个mbox 负责那个什么 显示这个乌龟在屏幕上

34
00:03:57,630 --> 00:04:05,630
然后这一个用的是libjs 它这一个库就是根据这个 就是在网页上实现这一个肉素的功能

35
00:04:06,380 --> 00:04:08,980
也看到这里一个地址 然后就是

36
00:04:09,830 --> 00:04:10,510
这是用来debug的

37
00:04:11,900 --> 00:04:19,180
这个是用来看我们发送了这个东西 叫做twist的东西 就是用来获取现在小乌龟的信息 在哪

38
00:04:20,320 --> 00:04:25,640
不是 这个是控制的 就是发送 你看linear angular 一个角速度 一个线速度 然后发送

39
00:04:27,150 --> 00:04:32,750
然后就是后面我们就是需要调用了 它的摇杆就是摇杆的具体调用

40
00:04:33,480 --> 00:04:37,120
包括一些美化 它是自动生成回来的

41
00:04:39,340 --> 00:04:43,460
然后 这里是一个线速度角速度的初始化

42
00:04:44,700 --> 00:04:52,220
然后是一个中断 好像我并没有用到 它这里是算角数的线丝的时候用到过

43
00:04:53,900 --> 00:05:02,180
然后就是是订阅 是用来负责获取现在信息的 包括这一个小乌龟地地址的获取

44
00:05:02,350 --> 00:05:09,750
我从这个进行一些数据处理 然后调整它 那个小模块的margin就是这个东西

45
00:05:10,940 --> 00:05:13,380
这个东西它的margin

46
00:05:17,200 --> 00:05:29,000
有这一看box 这一个小东西了 margin从这东西来调整的 这是百分比 从这东西来调的 然后也是一些调试的代码

47
00:05:31,200 --> 00:05:34,200
哈哈就是基本的美化 大概就是这样
